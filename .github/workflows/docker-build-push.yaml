name: Build and Push Docker Image to Amazon ECR

on:
  workflow_dispatch:
  push:
    branches: [ master ]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CLUSTER_NAME: soat-cluster
  ECR_REPOSITORY: fastfood-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ID }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY

      - name: Login ECR
        run: |
          aws ecr get-login-password \
          --region ${{ env.AWS_REGION }} | \
          docker login --username AWS \
          --password-stdin \
          ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: docker build -t $ECR_REPOSITORY:latest .

      - name: Tag and Push image to ECR
        id: push
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker tag ${{ env.ECR_REPOSITORY }}:latest $IMAGE_URI
          docker push $IMAGE_URI

      - name: Update Kube Config
        run: |
          aws eks update-kubeconfig \
          --name ${{ env.CLUSTER_NAME }} \
          --region ${{ env.AWS_REGION }}
      
      - name: Kube Apply
        run: |
          kubectl apply -f k8s
